{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Length","title","changeTime","type","time","formatTime","className","onClick","App","useState","displayTime","setDisplayTime","breakTime","setBreakTime","sessionTime","setSessionTime","timerOn","setTimerOn","onBreak","setOnBreak","Audio","breakAudio","playSound","currentTime","play","minutes","Math","floor","seconds","amount","prev","Date","getTime","nextDate","onBreakVariable","interval","setInterval","localStorage","clear","setItem","clearInterval","getItem","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd411ae1.chunk.js","sourcesContent":["import {useState} from 'react';\nimport './App.css';\nimport { FaArrowDown, FaArrowUp, FaPlay, FaPause, FaSyncAlt } from 'react-icons/fa';\n\nfunction App() {\n  \n  const [displayTime, setDisplayTime] = useState(25 * 60);\n  const [breakTime, setBreakTime] = useState(5 * 60);\n  const [sessionTime, setSessionTime] = useState(25 * 60);\n  const [timerOn, setTimerOn] = useState(false);\n  const [onBreak, setOnBreak] = useState(false);\n  const [breakAudio] = useState(new Audio('./breaktime.mp3'));\n\n  const playSound = () => {\n    breakAudio.currentTime = 0;\n    breakAudio.play();\n  }\n\n  const formatTime = (time) => {\n    let minutes = Math.floor(time/60);\n    let seconds = time % 60;\n    return (\n      (minutes < 10 ? \"0\" + minutes : minutes) + \n      \":\" + \n      (seconds < 10 ? \"0\" + seconds : seconds)\n    );\n };\n\n  const changeTime = (amount, type) => {\n    if(type === \"break\"){\n      if(breakTime <= 60 && amount < 0) {\n        return;\n      }\n      setBreakTime(prev => prev + amount);\n    }\n    else {\n      if(sessionTime <= 60 && amount < 0) {\n        return;\n      }\n      setSessionTime(prev => prev + amount);\n      if(!timerOn){\n        setDisplayTime(sessionTime + amount);\n      }\n    }\n  }\n\n  const controlTime = () => {\n    let second = 1000;\n    let date = new Date().getTime();\n    let nextDate = new Date().getTime() + second;\n    let onBreakVariable = onBreak;\n    if (!timerOn) {\n      let interval = setInterval(() => {\n        date = new Date().getTime();\n        if(date > nextDate) {\n          setDisplayTime(prev => {\n            if(prev <= 0 && !onBreakVariable) {\n              playSound();\n              onBreakVariable = true;\n              setOnBreak(true);\n              return breakTime;\n            }\n            else if(prev <= 0 && onBreakVariable) {\n              playSound();\n              onBreakVariable = false;\n              setOnBreak(false);\n              return sessionTime;\n            }\n           return prev - 1;\n          });\n          nextDate += second;\n        }\n      }, 30);\n      localStorage.clear();\n      localStorage.setItem('interval-id', interval)\n    }\n\n    if(timerOn) {\n      clearInterval(localStorage.getItem('interval-id'));\n    }\n\n    setTimerOn(!timerOn);\n  };\n  const resetTime = () => {\n    setDisplayTime(25 * 60);\n    setBreakTime(5 * 60);\n    setSessionTime(25 * 60);\n  }\n\n  \n  return (\n    <div className=\"App\">\n      <h1>Pomodoro Clock</h1>\n\n      <div className=\"App-header\">\n        <div className=\"action-section\">\n          <Length \n            title = {\"Break Length\"} \n            changeTime ={changeTime} \n            type = {\"break\"} \n            time={breakTime} \n            formatTime={formatTime} \n            />\n          <Length \n            title = {\"Session Length\"} \n            changeTime ={changeTime} \n            type = {\"session\"} \n            time={sessionTime} \n            formatTime={formatTime} \n          />\n        </div>\n\n        <div className=\"time-section\">\n          <h3>Session</h3>\n          <h1>{formatTime(displayTime)}</h1>  \n\n          <button onClick = {controlTime}>\n            {timerOn ? <i><FaPause/></i> : <i><FaPlay/></i>}\n          </button>\n\n          <button onClick={resetTime}><i><FaSyncAlt/></i></button>\n        </div>\n\n\n      </div>\n        <div className=\"footer\">\n          <footer>\n            <p className=\"footer__text\">\n            Â© 2021 - Website developed by <a href=\"https://github.com/bishalmallick\" target=\"_blank\" rel=\"noopener noreferrer\"> Bishal Mallick</a>\n            </p>\n          </footer>\n        </div>\n    </div>\n  );\n}\n\nconst Length = ({title, changeTime, type, time, formatTime}) => {\n  return(\n    <div className=\"box\">\n      <h3>{title}</h3>\n      <div className=\"time-sets\">\n        <button onClick={() => changeTime(-60, type)}>\n          <i><FaArrowDown/></i>\n        </button>\n        <h3>{formatTime(time)}</h3>\n        <button onClick={() => changeTime(60, type)}>\n          <i><FaArrowUp/></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}